import binascii
import struct


def parseData(data):
    v = int(data[0])
    if v >= 0x40 and v < 0x80 or v >= 0xc0:
        return 0x40 - parseData2(data)
    else:
        return parseData2(data)

def parseData2(data):
    nBytes = 0
    while int(data[nBytes]) >= 0x80:
        nBytes += 1

    nBytes += 1

    if nBytes == 1:
        return int(data[0])
    elif nBytes == 2:
        return (int(data[1]) * 0x40 + int(data[0])) - 0x80
    elif nBytes == 3:
        return (int(data[2]) * 0x80 + int(data[1]) - 0x80) * 0x40 + int(data[0]) - 0x80
    elif nBytes == 4:
        return ((int(data[3]) * 0x80 + int(data[2]) - 0x80) * 0x80 + int(data[1] - 0x80)) * 0x40 + int(data[0]) - 0x80
    elif nBytes == 5:
        return (((int(data[4]) * 0x80 + int(data[3]) - 0x80) * 0x80 + int(data[2]) - 0x80) * 0x80 + int(data[1]) - 0x80)* 0x40 + int(data[0]) - 0x80
    elif nBytes == 6:
        return ((((int(data[5]) * 0x80 + int(data[4]) -0x80) * 0x80 +  int(data[3]) - 0x80) * 0x80 + int(data[2]) - 0x80) * 0x80 + int(data[1]) - 0x80) * 0x40 + int(data[0]) - 0x80
    else:
        assert False


data = binascii.unhexlify(b'')

data = binascii.unhexlify(b'004a1e543c023a4b11c53f4d') # b'5d03b0c101000a5400a82c4750c90549ff69')
                         #b'5e03000028000088db46c03caa48ff69'
                         #b'5f03281e1e5e0020644640963148ff69'
for i in range(len(data)):
    print(parseData(data[i:]))

print('\n\n')

for i in range(len(data)):
    print(parseData2(data[i:]))

print('\n\n')

for i in range(len(data) - 4):
    print(binascii.hexlify(data[i:i+4]), struct.unpack('f', data[i:i+4]))
